import React, { useState } from "react";
import axios from "axios";
import InstructionDetails from "./InstructionDetails";
import "bootstrap/dist/css/bootstrap.min.css";

const PaymentForm = () => {
  const [transaction, setTransaction] = useState({
    paymentCurrency: "",
    debitAccount: "",
    valueDate: new Date().toISOString().split("T")[0],
    paymentMethod: "",
    payeeDetails: "",
    payeeNature: "",
    bankDetails: "",
    yourReference: "",
    paymentReference: "",
    amount: "",
    notesToPayee: "",
    additionalNotes: "",
  });

  const [message, setMessage] = useState("");

  const updateTransaction = (field, value) => {
    setTransaction((prev) => ({
      ...prev,
      [field]: value,
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setMessage("");

    try {
      const response = await axios.post(
        "http://localhost:8080/api/transactions",
        transaction
      );

      setMessage(
        "✅ Transaction created with ID: " + response.data.transactionId
      );

      // reset form
      setTransaction({
        paymentCurrency: "",
        debitAccount: "",
        valueDate: new Date().toISOString().split("T")[0],
        paymentMethod: "",
        payeeDetails: "",
        payeeNature: "",
        bankDetails: "",
        yourReference: "",
        paymentReference: "",
        amount: "",
        notesToPayee: "",
        additionalNotes: "",
      });
    } catch (err) {
      console.error(err);
      setMessage("❌ Failed to create transaction. Check backend.");
    }
  };

  return (
    <div className="container mt-5">
      <h2>Create Transaction</h2>
      {message && <div className="alert alert-info">{message}</div>}

      <form onSubmit={handleSubmit}>
        {/* Reuse InstructionDetails for currency, debitAccount, valueDate */}
        <InstructionDetails
          instructionDetails={transaction}
          updateInstructionDetails={updateTransaction}
          errors={{}}
        />

        {/* Extra fields from entity */}
        <div className="row g-3">
          <div className="col-md-6">
            <label className="form-label">Payment Method</label>
            <input
              type="text"
              className="form-control"
              value={transaction.paymentMethod}
              onChange={(e) =>
                updateTransaction("paymentMethod", e.target.value)
              }
            />
          </div>

          <div className="col-md-6">
            <label className="form-label">Payee Details</label>
            <input
              type="text"
              className="form-control"
              value={transaction.payeeDetails}
              onChange={(e) =>
                updateTransaction("payeeDetails", e.target.value)
              }
            />
          </div>

          <div className="col-md-6">
            <label className="form-label">Payee Nature</label>
            <input
              type="text"
              className="form-control"
              value={transaction.payeeNature}
              onChange={(e) =>
                updateTransaction("payeeNature", e.target.value)
              }
            />
          </div>

          <div className="col-md-6">
            <label className="form-label">Bank Details</label>
            <input
              type="text"
              className="form-control"
              value={transaction.bankDetails}
              onChange={(e) =>
                updateTransaction("bankDetails", e.target.value)
              }
            />
          </div>

          <div className="col-md-6">
            <label className="form-label">Your Reference</label>
            <input
              type="text"
              className="form-control"
              value={transaction.yourReference}
              onChange={(e) =>
                updateTransaction("yourReference", e.target.value)
              }
            />
          </div>

          <div className="col-md-6">
            <label className="form-label">Payment Reference</label>
            <input
              type="text"
              className="form-control"
              value={transaction.paymentReference}
              onChange={(e) =>
                updateTransaction("paymentReference", e.target.value)
              }
            />
          </div>

          <div className="col-md-6">
            <label className="form-label">Amount</label>
            <input
              type="number"
              className="form-control"
              value={transaction.amount}
              onChange={(e) => updateTransaction("amount", e.target.value)}
            />
          </div>

          <div className="col-md-6">
            <label className="form-label">Notes To Payee</label>
            <input
              type="text"
              className="form-control"
              value={transaction.notesToPayee}
              onChange={(e) =>
                updateTransaction("notesToPayee", e.target.value)
              }
            />
          </div>

          <div className="col-md-12">
            <label className="form-label">Additional Notes</label>
            <textarea
              className="form-control"
              value={transaction.additionalNotes}
              onChange={(e) =>
                updateTransaction("additionalNotes", e.target.value)
              }
            ></textarea>
          </div>
        </div>

        <button type="submit" className="btn btn-primary mt-4">
          Submit Transaction
        </button>
      </form>
    </div>
  );
};

export default PaymentForm;
